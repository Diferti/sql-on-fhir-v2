[
  {
    "title": "forEach, forEachOrNull",
    "resources": [
      {
        "resourceType": "Patient",
        "id": "p1",
        "name": [{ "use": "official", "family": "f1" }],
        "contact": [{ "gender": "other" }]
      }
    ],
    "tests": [
      {
        "title": "forEach matching some",
        "view": {
          "resource": "Patient",
          "select": [
            {
              "forEach": "name",
              "select": [
                {
                  "column": [{ "path": "family", "name": "family" }],
                  "type": "column"
                }
              ],
              "type": "forEach"
            }
          ],
          "type": "select"
        },
        "expect": [{ "family": "f1" }],
        "observed": [{ "family": "f1" }],
        "passed": true
      },
      {
        "title": "forEach matching some, using $this",
        "view": {
          "resource": "Patient",
          "select": [
            {
              "forEach": "name",
              "select": [
                {
                  "column": [{ "path": "$this.family", "name": "family" }],
                  "type": "column"
                }
              ],
              "type": "forEach"
            }
          ],
          "type": "select"
        },
        "expect": [{ "family": "f1" }],
        "observed": [{ "family": "f1" }],
        "passed": true
      },
      {
        "title": "forEach matching some, using $this",
        "view": {
          "resource": "Patient",
          "select": [
            {
              "forEach": "name.family",
              "select": [
                {
                  "column": [{ "path": "$this", "name": "family" }],
                  "type": "column"
                }
              ],
              "type": "forEach"
            }
          ],
          "type": "select"
        },
        "expect": [{ "family": "f1" }],
        "observed": [{ "family": "f1" }],
        "passed": true
      },
      {
        "title": "forEach matching none",
        "view": {
          "resource": "Patient",
          "select": [
            {
              "forEach": "address.where(text='never-match')",
              "select": [
                { "column": [{ "path": "id", "name": "id" }], "type": "column" }
              ],
              "type": "forEach"
            }
          ],
          "type": "select"
        },
        "expect": [],
        "observed": [],
        "passed": true
      },
      {
        "title": "forEachOrNull matching none",
        "view": {
          "resource": "Patient",
          "select": [
            {
              "forEachOrNull": "address.where(text='never-match')",
              "select": [
                { "column": [{ "path": "id", "name": "id" }], "type": "column" }
              ],
              "type": "forEachOrNull"
            }
          ],
          "type": "select"
        },
        "expect": [{ "id": null }],
        "observed": [{ "id": null }],
        "passed": true
      }
    ]
  },
  {
    "title": "unionAll",
    "resources": [
      {
        "resourceType": "Patient",
        "id": "p1",
        "name": [{ "use": "official", "family": "f1" }],
        "contact": [
          { "name": { "family": "f2" } },
          { "name": { "family": "f3" } }
        ]
      }
    ],
    "tests": [
      {
        "title": "unionAll of names",
        "view": {
          "resource": "Patient",
          "select": [
            {
              "unionAll": [
                {
                  "forEach": "name",
                  "select": [
                    {
                      "column": [{ "path": "family", "name": "family" }],
                      "type": "column"
                    }
                  ],
                  "type": "forEach"
                },
                {
                  "forEach": "contact.name",
                  "select": [
                    {
                      "column": [{ "path": "family", "name": "family" }],
                      "type": "column"
                    }
                  ],
                  "type": "forEach"
                }
              ],
              "type": "unionAll"
            }
          ],
          "type": "select"
        },
        "expect": [{ "family": "f1" }, { "family": "f2" }, { "family": "f3" }],
        "observed": [
          { "family": "f1" },
          { "family": "f2" },
          { "family": "f3" }
        ],
        "passed": true
      },
      {
        "title": "unionAll with different internal column names",
        "view": {
          "resource": "Patient",
          "select": [
            {
              "unionAll": [
                {
                  "forEach": "name",
                  "select": [
                    {
                      "column": [
                        { "path": "family", "name": "a" },
                        { "path": "{}", "name": "b" }
                      ],
                      "type": "column"
                    }
                  ],
                  "type": "forEach"
                },
                {
                  "forEach": "contact.name",
                  "select": [
                    {
                      "column": [
                        { "path": "{}", "name": "a" },
                        { "path": "family", "name": "b" }
                      ],
                      "type": "column"
                    }
                  ],
                  "type": "forEach"
                }
              ],
              "type": "unionAll"
            }
          ],
          "type": "select"
        },
        "expect": [
          { "a": "f1", "b": null },
          { "a": null, "b": "f2" },
          { "a": null, "b": "f3" }
        ],
        "observed": [
          { "a": "f1", "b": null },
          { "a": null, "b": "f2" },
          { "a": null, "b": "f3" }
        ],
        "passed": true
      },
      {
        "title": "unionAll with mismatching branches",
        "view": {
          "resource": "Patient",
          "select": [
            {
              "unionAll": [
                {
                  "column": [{ "path": "'a'", "name": "a" }],
                  "type": "column"
                },
                { "column": [{ "path": "'b'", "name": "b" }], "type": "column" }
              ],
              "type": "unionAll"
            }
          ],
          "type": "select"
        },
        "expectError": true
      },
      {
        "title": "unionAll with forEachOrNull",
        "view": {
          "resource": "Patient",
          "select": [
            {
              "forEachOrNull": "address.where(id = 'never-match')",
              "select": [{}],
              "type": "forEachOrNull"
            }
          ],
          "type": "select"
        },
        "expect": [{ "letter": null }],
        "observed": [],
        "passed": false
      },
      {
        "title": "unionAll of names with column",
        "view": {
          "resource": "Patient",
          "select": [
            {
              "select": [
                {
                  "column": [{ "path": "'x'", "name": "common" }],
                  "type": "column"
                },
                {
                  "unionAll": [
                    {
                      "forEach": "name",
                      "select": [
                        {
                          "column": [{ "path": "family", "name": "family" }],
                          "type": "column"
                        }
                      ],
                      "type": "forEach"
                    },
                    {
                      "forEach": "contact.name",
                      "select": [
                        {
                          "column": [{ "path": "family", "name": "family" }],
                          "type": "column"
                        }
                      ],
                      "type": "forEach"
                    }
                  ],
                  "type": "unionAll"
                }
              ],
              "type": "select"
            }
          ],
          "type": "select"
        },
        "expect": [
          { "common": "x", "family": "f1" },
          { "common": "x", "family": "f2" },
          { "common": "x", "family": "f3" }
        ],
        "observed": [
          { "family": "f1", "common": "x" },
          { "family": "f2", "common": "x" },
          { "family": "f3", "common": "x" }
        ],
        "passed": true
      },
      {
        "title": "unionAll of names with column and select",
        "view": {
          "resource": "Patient",
          "select": [
            {
              "column": [{ "path": "'x'", "name": "commonx" }],
              "select": [
                {
                  "unionAll": [
                    {
                      "forEach": "name",
                      "select": [
                        {
                          "column": [{ "path": "family", "name": "p_family" }],
                          "type": "column"
                        }
                      ],
                      "type": "forEach"
                    },
                    {
                      "forEach": "contact.name",
                      "select": [
                        {
                          "column": [{ "path": "family", "name": "p_family" }],
                          "type": "column"
                        }
                      ],
                      "type": "forEach"
                    }
                  ],
                  "type": "unionAll"
                },
                {
                  "forEach": "contact.name",
                  "select": [
                    {
                      "column": [{ "path": "family", "name": "c_family" }],
                      "type": "column"
                    }
                  ],
                  "type": "forEach"
                }
              ],
              "type": "select"
            }
          ],
          "type": "select"
        },
        "expect": [
          { "commonx": "x", "c_family": "f2", "p_family": "f1" },
          { "commonx": "x", "c_family": "f3", "p_family": "f1" },
          { "commonx": "x", "c_family": "f2", "p_family": "f2" },
          { "commonx": "x", "c_family": "f3", "p_family": "f2" },
          { "commonx": "x", "c_family": "f2", "p_family": "f3" },
          { "commonx": "x", "c_family": "f3", "p_family": "f3" }
        ],
        "observed": [
          { "c_family": "f2", "p_family": "f1" },
          { "c_family": "f2", "p_family": "f2" },
          { "c_family": "f2", "p_family": "f3" },
          { "c_family": "f3", "p_family": "f1" },
          { "c_family": "f3", "p_family": "f2" },
          { "c_family": "f3", "p_family": "f3" }
        ],
        "passed": false
      }
    ]
  },
  {
    "title": "exists function",
    "resources": [
      {
        "resourceType": "Patient",
        "id": "p1",
        "name": [{ "use": "official", "family": "f1" }]
      },
      { "resourceType": "Patient", "id": "p2" },
      {
        "resourceType": "Patient",
        "id": "p3",
        "name": [{ "use": "nickname", "given": ["g3"] }]
      }
    ],
    "tests": [
      {
        "title": "exists in field path",
        "view": {
          "resource": "Patient",
          "select": [
            {
              "column": [
                { "path": "id", "name": "id" },
                { "path": "name.exists()", "name": "has_name" }
              ],
              "type": "column"
            }
          ],
          "type": "select"
        },
        "expect": [
          { "id": "p1", "has_name": true },
          { "id": "p2", "has_name": false },
          { "id": "p3", "has_name": true }
        ],
        "observed": [
          { "id": "p1", "has_name": true },
          { "id": "p2", "has_name": false },
          { "id": "p3", "has_name": true }
        ],
        "passed": true
      },
      {
        "title": "nested exists in field path",
        "view": {
          "resource": "Patient",
          "select": [
            {
              "column": [
                { "path": "id", "name": "id" },
                { "path": "name.given.exists()", "name": "has_name" }
              ],
              "type": "column"
            }
          ],
          "type": "select"
        },
        "expect": [
          { "id": "p1", "has_name": false },
          { "id": "p2", "has_name": false },
          { "id": "p3", "has_name": true }
        ],
        "observed": [
          { "id": "p1", "has_name": false },
          { "id": "p2", "has_name": false },
          { "id": "p3", "has_name": true }
        ],
        "passed": true
      },
      {
        "title": "exists in where path",
        "view": {
          "resource": "Patient",
          "select": [
            { "column": [{ "path": "id", "name": "id" }], "type": "column" }
          ],
          "where": [{ "path": "name.exists()" }],
          "type": "select"
        },
        "expect": [{ "id": "p1" }, { "id": "p3" }],
        "observed": [{ "id": "p1" }, { "id": "p3" }],
        "passed": true
      },
      {
        "title": "nested exists in where path",
        "view": {
          "resource": "Patient",
          "select": [
            { "column": [{ "path": "id", "name": "id" }], "type": "column" }
          ],
          "where": [{ "path": "name.given.exists()" }],
          "type": "select"
        },
        "expect": [{ "id": "p3" }],
        "observed": [{ "id": "p3" }],
        "passed": true
      },
      {
        "title": "exists in forEach path",
        "view": {
          "resource": "Patient",
          "select": [
            {
              "forEach": "where(name.exists())",
              "select": [
                { "column": [{ "path": "id", "name": "id" }], "type": "column" }
              ],
              "type": "forEach"
            }
          ],
          "type": "select"
        },
        "expect": [{ "id": "p1" }, { "id": "p3" }],
        "observed": [{ "id": "p1" }, { "id": "p3" }],
        "passed": true
      },
      {
        "title": "Empty sub-select kills results",
        "view": {
          "resource": "Patient",
          "select": [
            {
              "forEach": "where(name.exists())",
              "select": [
                {
                  "column": [{ "path": "id", "name": "id" }],
                  "type": "column"
                },
                {
                  "forEach": "name.where(text='never-match')",
                  "select": [
                    {
                      "column": [{ "path": "'never'", "name": "never" }],
                      "type": "column"
                    }
                  ],
                  "type": "forEach"
                }
              ],
              "type": "forEach"
            }
          ],
          "type": "select"
        },
        "expect": [],
        "observed": [],
        "passed": true
      }
    ]
  },
  {
    "title": "simple path traversal",
    "resources": [
      {
        "resourceType": "Observation",
        "status": "preliminary",
        "valueString": "positive",
        "subject": { "reference": "Patient/123" },
        "code": { "coding": [{ "code": "123" }] },
        "component": [{ "code": { "coding": [{ "code": "456" }] } }]
      }
    ],
    "tests": [
      {
        "title": "single segment",
        "view": {
          "resource": "Observation",
          "select": [
            {
              "column": [{ "path": "status", "name": "status" }],
              "type": "column"
            }
          ],
          "type": "select"
        },
        "expect": [{ "status": "preliminary" }],
        "observed": [{ "status": "preliminary" }],
        "passed": true
      },
      {
        "title": "single segment with name",
        "view": {
          "resource": "Observation",
          "select": [
            {
              "column": [{ "path": "status", "name": "ob_status" }],
              "type": "column"
            }
          ],
          "type": "select"
        },
        "expect": [{ "ob_status": "preliminary" }],
        "observed": [{ "ob_status": "preliminary" }],
        "passed": true
      },
      {
        "title": "segment with choice type",
        "view": {
          "resource": "Observation",
          "select": [
            {
              "column": [
                { "path": "value.ofType(string)", "name": "valueString" }
              ],
              "type": "column"
            }
          ],
          "type": "select"
        },
        "expect": [{ "valueString": "positive" }],
        "observed": [{ "valueString": "positive" }],
        "passed": true
      },
      {
        "title": "multiple segments",
        "view": {
          "resource": "Observation",
          "select": [
            {
              "column": [{ "path": "subject.reference", "name": "reference" }],
              "type": "column"
            }
          ],
          "type": "select"
        },
        "expect": [{ "reference": "Patient/123" }],
        "observed": [{ "reference": "Patient/123" }],
        "passed": true
      },
      {
        "title": "multiple segments, one level of nesting",
        "view": {
          "resource": "Observation",
          "select": [
            {
              "column": [{ "path": "code.coding.code", "name": "code" }],
              "type": "column"
            }
          ],
          "type": "select"
        },
        "expect": [{ "code": "123" }],
        "observed": [{ "code": "123" }],
        "passed": true
      },
      {
        "title": "multiple segments, multiple level of nesting ",
        "view": {
          "resource": "Observation",
          "select": [
            {
              "column": [
                { "path": "component.code.coding.code", "name": "code" }
              ],
              "type": "column"
            }
          ],
          "type": "select"
        },
        "expect": [{ "code": "456" }],
        "observed": [{ "code": "456" }],
        "passed": true
      },
      {
        "title": "null values",
        "view": {
          "resource": "Observation",
          "select": [
            {
              "column": [
                { "path": "status", "name": "status" },
                {
                  "name": "identifier_value",
                  "path": "identifier.first().value"
                }
              ],
              "type": "column"
            }
          ],
          "type": "select"
        },
        "expect": [{ "status": "preliminary", "identifier_value": null }],
        "observed": [{ "status": "preliminary", "identifier_value": null }],
        "passed": true
      }
    ]
  },
  {
    "title": "join function",
    "resources": [
      {
        "resourceType": "Patient",
        "id": "p1",
        "name": [{ "use": "official", "given": ["p1.g1", "p1.g2"] }]
      }
    ],
    "tests": [
      {
        "title": "join with comma",
        "view": {
          "resource": "Patient",
          "select": [
            {
              "column": [
                { "path": "id", "name": "id" },
                { "path": "name.given.join(',')", "name": "given" }
              ],
              "type": "column"
            }
          ],
          "type": "select"
        },
        "expect": [{ "id": "p1", "given": "p1.g1,p1.g2" }],
        "observed": [{ "id": "p1", "given": "p1.g1,p1.g2" }],
        "passed": true
      },
      {
        "title": "join with empty value",
        "view": {
          "resource": "Patient",
          "select": [
            {
              "column": [
                { "path": "id", "name": "id" },
                { "path": "name.given.join('')", "name": "given" }
              ],
              "type": "column"
            }
          ],
          "type": "select"
        },
        "expect": [{ "id": "p1", "given": "p1.g1p1.g2" }],
        "observed": [{ "id": "p1", "given": "p1.g1p1.g2" }],
        "passed": true
      },
      {
        "title": "join with no value - default to no separator",
        "view": {
          "resource": "Patient",
          "select": [
            {
              "column": [
                { "path": "id", "name": "id" },
                { "path": "name.given.join()", "name": "given" }
              ],
              "type": "column"
            }
          ],
          "type": "select"
        },
        "expect": [{ "id": "p1", "given": "p1.g1p1.g2" }],
        "observed": [{ "id": "p1", "given": "p1.g1p1.g2" }],
        "passed": true
      }
    ]
  },
  {
    "title": "first function",
    "resources": [
      {
        "resourceType": "Patient",
        "name": [
          { "use": "official", "family": "f1", "given": ["g1.1", "g1.2"] },
          { "use": "usual", "given": ["g2.1"] },
          {
            "use": "maiden",
            "family": "f3",
            "given": ["g3.1", "g3.2"],
            "period": { "end": "2002" }
          }
        ]
      }
    ],
    "tests": [
      {
        "title": "table level first()",
        "view": {
          "resource": "Patient",
          "select": [
            {
              "column": [{ "path": "name.first().use", "name": "use" }],
              "type": "column"
            }
          ],
          "type": "select"
        },
        "expect": [{ "use": "official" }],
        "observed": [{ "use": "official" }],
        "passed": true
      },
      {
        "title": "table and field level first()",
        "view": {
          "resource": "Patient",
          "select": [
            {
              "column": [
                { "path": "name.first().given.first()", "name": "given" }
              ],
              "type": "column"
            }
          ],
          "type": "select"
        },
        "expect": [{ "given": "g1.1" }],
        "observed": [{ "given": "g1.1" }],
        "passed": true
      }
    ]
  },
  {
    "title": "validation",
    "resources": [
      {
        "resourceType": "Observation",
        "status": "preliminary",
        "valueString": "positive",
        "subject": { "reference": "Patient/123" },
        "code": { "coding": [{ "code": "123" }] },
        "component": [{ "code": { "coding": [{ "code": "456" }] } }]
      }
    ],
    "tests": [
      {
        "title": "column names must be unique",
        "view": {
          "resource": "Observation",
          "select": [
            {
              "column": [
                { "path": "status", "name": "status" },
                { "path": "code.coding.code", "name": "status" }
              ],
              "type": "column"
            }
          ],
          "type": "select"
        },
        "expectError": true
      }
    ]
  },
  {
    "title": "where function and element",
    "resources": [
      {
        "resourceType": "Patient",
        "id": "p1",
        "name": [{ "use": "official", "family": "f1" }]
      },
      {
        "resourceType": "Patient",
        "id": "p2",
        "name": [{ "use": "nickname", "family": "f2" }]
      },
      {
        "resourceType": "Patient",
        "id": "p3",
        "name": [{ "use": "nickname", "given": ["g3"], "family": "f3" }]
      },
      { "resourceType": "Observation", "id": "o1", "valueInteger": 12 },
      { "resourceType": "Observation", "id": "o2", "valueInteger": 10 }
    ],
    "tests": [
      {
        "title": "simple where path with result",
        "view": {
          "resource": "Patient",
          "select": [
            { "column": [{ "path": "id", "name": "id" }], "type": "column" }
          ],
          "where": [{ "path": "name.where(use = 'official').exists()" }],
          "type": "select"
        },
        "expect": [{ "id": "p1" }],
        "observed": [{ "id": "p1" }],
        "passed": true
      },
      {
        "title": "where path with no results",
        "view": {
          "resource": "Patient",
          "select": [
            { "column": [{ "path": "id", "name": "id" }], "type": "column" }
          ],
          "where": [{ "path": "name.where(use = 'maiden').exists()" }],
          "type": "select"
        },
        "expect": [],
        "observed": [],
        "passed": true
      },
      {
        "title": "where path with greater than inequality",
        "view": {
          "resource": "Observation",
          "select": [
            { "column": [{ "path": "id", "name": "id" }], "type": "column" }
          ],
          "where": [{ "path": "where(value.ofType(integer) > 11).exists()" }],
          "type": "select"
        },
        "expect": [{ "id": "o1" }],
        "observed": [{ "id": "o1" }],
        "passed": true
      },
      {
        "title": "where path with less than inequality",
        "view": {
          "resource": "Observation",
          "select": [
            { "column": [{ "path": "id", "name": "id" }], "type": "column" }
          ],
          "where": [{ "path": "where(value.ofType(integer) < 11).exists()" }],
          "type": "select"
        },
        "expect": [{ "id": "o2" }],
        "observed": [{ "id": "o2" }],
        "passed": true
      },
      {
        "title": "multiple where paths",
        "view": {
          "resource": "Patient",
          "select": [
            { "column": [{ "path": "id", "name": "id" }], "type": "column" }
          ],
          "where": [
            { "path": "name.where(use = 'official').exists()" },
            { "path": "name.where(family = 'f1').exists()" }
          ],
          "type": "select"
        },
        "expect": [{ "id": "p1" }],
        "observed": [{ "id": "p1" }],
        "passed": true
      },
      {
        "title": "where path with an 'and' connector",
        "view": {
          "resource": "Patient",
          "select": [
            { "column": [{ "path": "id", "name": "id" }], "type": "column" }
          ],
          "where": [
            {
              "path": "name.where(use = 'official' and family = 'f1').exists()"
            }
          ],
          "type": "select"
        },
        "expect": [{ "id": "p1" }],
        "observed": [{ "id": "p1" }],
        "passed": true
      },
      {
        "title": "where path with an 'or' connector",
        "view": {
          "resource": "Patient",
          "select": [
            { "column": [{ "path": "id", "name": "id" }], "type": "column" }
          ],
          "where": [
            { "path": "name.where(use = 'official' or family = 'f2').exists()" }
          ],
          "type": "select"
        },
        "expect": [{ "id": "p1" }, { "id": "p2" }],
        "observed": [{ "id": "p1" }, { "id": "p2" }],
        "passed": true
      },
      {
        "title": "where path that evaluates to true when empty",
        "view": {
          "resource": "Patient",
          "select": [
            { "column": [{ "path": "id", "name": "id" }], "type": "column" }
          ],
          "where": [{ "path": "name.where(family = 'f2').empty()" }],
          "type": "select"
        },
        "expect": [{ "id": "p1" }, { "id": "p3" }],
        "observed": [{ "id": "p1" }, { "id": "p3" }],
        "passed": true
      }
    ]
  },
  {
    "title": "extension function",
    "resources": [
      {
        "resourceType": "Patient",
        "id": "pt1",
        "meta": {
          "profile": [
            "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"
          ]
        },
        "extension": [
          {
            "id": "birthsex",
            "url": "http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex",
            "valueCode": "F"
          },
          {
            "id": "race",
            "url": "http://hl7.org/fhir/us/core/StructureDefinition/us-core-race",
            "extension": [
              {
                "url": "ombCategory",
                "valueCoding": {
                  "system": "urn:oid:2.16.840.1.113883.6.238",
                  "code": "2106-3",
                  "display": "White"
                }
              },
              { "url": "text", "valueString": "Mixed" }
            ]
          },
          {
            "id": "sex",
            "url": "http://hl7.org/fhir/us/core/StructureDefinition/us-core-sex",
            "valueCode": "248152002"
          }
        ]
      },
      {
        "resourceType": "Patient",
        "id": "pt2",
        "meta": {
          "profile": [
            "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"
          ]
        },
        "extension": [
          {
            "id": "birthsex",
            "url": "http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex",
            "valueCode": "M"
          },
          {
            "url": "http://hl7.org/fhir/us/core/StructureDefinition/us-core-race",
            "id": "race",
            "extension": [
              {
                "url": "ombCategory",
                "valueCoding": {
                  "system": "urn:oid:2.16.840.1.113883.6.238",
                  "code": "2135-2",
                  "display": "Hispanic or Latino"
                }
              },
              { "url": "text", "valueString": "Mixed" }
            ]
          },
          {
            "id": "sex",
            "url": "http://hl7.org/fhir/us/core/StructureDefinition/us-core-sex",
            "valueCode": "248152002"
          }
        ]
      },
      {
        "resourceType": "Patient",
        "id": "pt3",
        "meta": {
          "profile": [
            "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"
          ]
        },
        "extension": []
      }
    ],
    "tests": [
      {
        "title": "simple extension",
        "description": "flatten simple extension",
        "view": {
          "resource": "Patient",
          "select": [
            {
              "column": [
                { "path": "id", "name": "id" },
                {
                  "name": "birthsex",
                  "path": "extension('http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex').value.ofType(code).first()"
                }
              ],
              "type": "column"
            }
          ],
          "type": "select"
        },
        "expect": [
          { "id": "pt1", "birthsex": "F" },
          { "id": "pt2", "birthsex": "M" },
          { "id": "pt3", "birthsex": null }
        ],
        "observed": [
          { "id": "pt1", "birthsex": "F" },
          { "id": "pt2", "birthsex": "M" },
          { "id": "pt3", "birthsex": null }
        ],
        "passed": true
      },
      {
        "title": "nested extension",
        "description": "flatten simple extension",
        "view": {
          "resource": "Patient",
          "select": [
            {
              "column": [
                { "path": "id", "name": "id" },
                {
                  "name": "race_code",
                  "path": "extension('http://hl7.org/fhir/us/core/StructureDefinition/us-core-race').extension('ombCategory').value.ofType(Coding).code.first()"
                }
              ],
              "type": "column"
            }
          ],
          "type": "select"
        },
        "expect": [
          { "id": "pt1", "race_code": "2106-3" },
          { "id": "pt2", "race_code": "2135-2" },
          { "id": "pt3", "race_code": null }
        ],
        "observed": [
          { "id": "pt1", "race_code": "2106-3" },
          { "id": "pt2", "race_code": "2135-2" },
          { "id": "pt3", "race_code": null }
        ],
        "passed": true
      }
    ]
  },
  {
    "title": "logic",
    "resources": [
      {
        "resourceType": "Patient",
        "id": "m0",
        "gender": "male",
        "deceasedBoolean": false
      },
      {
        "resourceType": "Patient",
        "id": "f0",
        "deceasedBoolean": false,
        "gender": "female"
      },
      {
        "resourceType": "Patient",
        "id": "m1",
        "gender": "male",
        "deceasedBoolean": true
      },
      { "resourceType": "Patient", "id": "f1", "gender": "female" }
    ],
    "tests": [
      {
        "title": "filtering with 'and'",
        "view": {
          "resource": "Patient",
          "where": [
            { "path": "gender = 'male' and deceased.ofType(boolean) = false" }
          ],
          "select": [
            { "column": [{ "path": "id", "name": "id" }], "type": "column" }
          ],
          "type": "select"
        },
        "expect": [{ "id": "m0" }],
        "observed": [{ "id": "m0" }],
        "passed": true
      },
      {
        "title": "filtering with 'or'",
        "view": {
          "resource": "Patient",
          "where": [
            { "path": "gender = 'male' or deceased.ofType(boolean) = false" }
          ],
          "select": [
            { "column": [{ "path": "id", "name": "id" }], "type": "column" }
          ],
          "type": "select"
        },
        "expect": [{ "id": "m0" }, { "id": "m1" }, { "id": "f0" }],
        "observed": [{ "id": "m0" }, { "id": "f0" }, { "id": "m1" }],
        "passed": true
      },
      {
        "title": "filtering with 'not'",
        "view": {
          "resource": "Patient",
          "where": [{ "path": "(gender = 'male').not()" }],
          "select": [
            { "column": [{ "path": "id", "name": "id" }], "type": "column" }
          ],
          "type": "select"
        },
        "expect": [{ "id": "f0" }, { "id": "f1" }],
        "observed": [{ "id": "f0" }, { "id": "f1" }],
        "passed": true
      }
    ]
  },
  {
    "title": "collection parameter",
    "resources": [
      {
        "resourceType": "Patient",
        "id": "pt1",
        "name": [
          { "use": "official", "family": "f1.1", "given": ["g1.1"] },
          { "family": "f1.2", "given": ["g1.2", "g1.3"] }
        ],
        "gender": "male",
        "birthDate": "1950-01-01",
        "address": [{ "city": "c1" }]
      },
      {
        "resourceType": "Patient",
        "id": "pt2",
        "name": [
          { "family": "f2.1", "given": ["g2.1"] },
          { "use": "official", "family": "f2.2", "given": ["g2.2", "g2.3"] }
        ],
        "gender": "female",
        "birthDate": "1950-01-01"
      }
    ],
    "tests": [
      {
        "title": "Fail when `collection` is not true",
        "view": {
          "resource": "Patient",
          "select": [
            {
              "column": [
                { "name": "id", "path": "id" },
                {
                  "name": "last_name",
                  "path": "name.family",
                  "collection": false
                },
                {
                  "name": "first_name",
                  "path": "name.given",
                  "collection": true
                }
              ],
              "type": "column"
            }
          ],
          "type": "select"
        },
        "expectError": true
      },
      {
        "title": "`collection` true",
        "view": {
          "resource": "Patient",
          "select": [
            {
              "column": [
                { "name": "id", "path": "id" },
                {
                  "name": "last_name",
                  "path": "name.family",
                  "collection": true
                },
                {
                  "name": "first_name",
                  "path": "name.given",
                  "collection": true
                }
              ],
              "type": "column"
            }
          ],
          "type": "select"
        },
        "expect": [
          {
            "id": "pt1",
            "last_name": ["f1.1", "f1.2"],
            "first_name": ["g1.1", "g1.2", "g1.3"]
          },
          {
            "id": "pt2",
            "last_name": ["f2.1", "f2.2"],
            "first_name": ["g2.1", "g2.2", "g2.3"]
          }
        ],
        "observed": [
          {
            "id": "pt1",
            "last_name": ["f1.1", "f1.2"],
            "first_name": ["g1.1", "g1.2", "g1.3"]
          },
          {
            "id": "pt2",
            "last_name": ["f2.1", "f2.2"],
            "first_name": ["g2.1", "g2.2", "g2.3"]
          }
        ],
        "passed": true
      }
    ]
  },
  {
    "title": "resourceKey and referenceKey functions",
    "resources": [
      {
        "resourceType": "Observation",
        "id": "o1",
        "basedOn": [
          { "reference": "ServiceRequest/123" },
          { "reference": "https://example.org/fhir/ServiceRequest/456" },
          { "reference": "CarePlan/123" }
        ]
      }
    ],
    "tests": [
      {
        "title": "get resource key",
        "view": {
          "resource": "Observation",
          "select": [
            {
              "column": [{ "path": "getResourceKey()", "name": "id" }],
              "type": "column"
            }
          ],
          "type": "select"
        },
        "expectCount": 1
      },
      {
        "title": "get reference key",
        "view": {
          "resource": "Observation",
          "select": [
            {
              "forEach": "basedOn",
              "select": [
                {
                  "column": [{ "name": "rid", "path": "getReferenceKey()" }],
                  "type": "column"
                }
              ],
              "type": "forEach"
            }
          ],
          "type": "select"
        },
        "expectCount": 3
      },
      {
        "title": "get reference key with resource param",
        "view": {
          "resource": "Observation",
          "select": [
            {
              "forEach": "basedOn.where(getReferenceKey(CarePlan).exists())",
              "select": [
                {
                  "column": [{ "name": "rid", "path": "getReferenceKey()" }],
                  "type": "column"
                }
              ],
              "type": "forEach"
            }
          ],
          "type": "select"
        },
        "expectCount": 1
      }
    ]
  }
]
