{
 "collection.json": {
  "title": "collection parameter",
  "resources": [
   {
    "resourceType": "Patient",
    "id": "pt1",
    "name": [
     {
      "use": "official",
      "family": "f1.1",
      "given": [
       "g1.1"
      ]
     },
     {
      "family": "f1.2",
      "given": [
       "g1.2",
       "g1.3"
      ]
     }
    ],
    "gender": "male",
    "birthDate": "1950-01-01",
    "address": [
     {
      "city": "c1"
     }
    ]
   },
   {
    "resourceType": "Patient",
    "id": "pt2",
    "name": [
     {
      "family": "f2.1",
      "given": [
       "g2.1"
      ]
     },
     {
      "use": "official",
      "family": "f2.2",
      "given": [
       "g2.2",
       "g2.3"
      ]
     }
    ],
    "gender": "female",
    "birthDate": "1950-01-01"
   }
  ],
  "tests": [
   {
    "title": "Fail when `collection` is not true",
    "view": {
     "resource": "Patient",
     "select": [
      {
       "alias": "id",
       "path": "id"
      },
      {
       "alias": "last_name",
       "path": "name.family",
       "collection": false
      },
      {
       "alias": "first_name",
       "path": "name.given",
       "collection": true
      }
     ]
    },
    "expectError": true,
    "result": {
     "passed": true,
     "error": "alias=last_name from path=name.family matched more than one element"
    }
   },
   {
    "title": "`collection` true",
    "view": {
     "resource": "Patient",
     "select": [
      {
       "alias": "id",
       "path": "id"
      },
      {
       "alias": "last_name",
       "path": "name.family",
       "collection": true
      },
      {
       "alias": "first_name",
       "path": "name.given",
       "collection": true
      }
     ]
    },
    "expect": [
     {
      "id": "pt1",
      "last_name": [
       "f1.1",
       "f1.2"
      ],
      "first_name": [
       "g1.1",
       "g1.2",
       "g1.3"
      ]
     },
     {
      "id": "pt2",
      "last_name": [
       "f2.1",
       "f2.2"
      ],
      "first_name": [
       "g2.1",
       "g2.2",
       "g2.3"
      ]
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "id": "pt1",
       "last_name": [
        "f1.1",
        "f1.2"
       ],
       "first_name": [
        "g1.1",
        "g1.2",
        "g1.3"
       ]
      },
      {
       "id": "pt2",
       "last_name": [
        "f2.1",
        "f2.2"
       ],
       "first_name": [
        "g2.1",
        "g2.2",
        "g2.3"
       ]
      }
     ]
    }
   }
  ],
  "implementation": "https://github.com/fhir/sql-on-fhir-v2"
 },
 "fn_exists.json": {
  "title": "exists function",
  "resources": [
   {
    "resourceType": "Patient",
    "id": "p1",
    "name": [
     {
      "use": "official",
      "family": "f1"
     }
    ]
   },
   {
    "resourceType": "Patient",
    "id": "p2"
   },
   {
    "resourceType": "Patient",
    "id": "p3",
    "name": [
     {
      "use": "nickname",
      "given": [
       "g3"
      ]
     }
    ]
   }
  ],
  "tests": [
   {
    "title": "exists in field path",
    "view": {
     "resource": "Patient",
     "select": [
      {
       "path": "id"
      },
      {
       "path": "name.exists()",
       "alias": "has_name"
      }
     ]
    },
    "expect": [
     {
      "id": "p1",
      "has_name": true
     },
     {
      "id": "p2",
      "has_name": false
     },
     {
      "id": "p3",
      "has_name": true
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "id": "p1",
       "has_name": true
      },
      {
       "id": "p2",
       "has_name": false
      },
      {
       "id": "p3",
       "has_name": true
      }
     ]
    }
   },
   {
    "title": "nested exists in field path",
    "view": {
     "resource": "Patient",
     "select": [
      {
       "path": "id"
      },
      {
       "path": "name.given.exists()",
       "alias": "has_name"
      }
     ]
    },
    "expect": [
     {
      "id": "p1",
      "has_name": false
     },
     {
      "id": "p2",
      "has_name": false
     },
     {
      "id": "p3",
      "has_name": true
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "id": "p1",
       "has_name": false
      },
      {
       "id": "p2",
       "has_name": false
      },
      {
       "id": "p3",
       "has_name": true
      }
     ]
    }
   },
   {
    "title": "exists in where path",
    "view": {
     "resource": "Patient",
     "select": [
      {
       "path": "id"
      }
     ],
     "where": [
      {
       "path": "name.exists()"
      }
     ]
    },
    "expect": [
     {
      "id": "p1"
     },
     {
      "id": "p3"
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "id": "p1"
      },
      {
       "id": "p3"
      }
     ]
    }
   },
   {
    "title": "nested exists in where path",
    "view": {
     "resource": "Patient",
     "select": [
      {
       "path": "id"
      }
     ],
     "where": [
      {
       "path": "name.given.exists()"
      }
     ]
    },
    "expect": [
     {
      "id": "p3"
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "id": "p3"
      }
     ]
    }
   },
   {
    "title": "exists in forEach path",
    "view": {
     "resource": "Patient",
     "select": [
      {
       "forEach": "where(name.exists())",
       "select": [
        {
         "path": "id"
        }
       ]
      }
     ]
    },
    "expect": [
     {
      "id": "p1"
     },
     {
      "id": "p3"
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "id": "p1"
      },
      {
       "id": "p3"
      }
     ]
    }
   }
  ],
  "implementation": "https://github.com/fhir/sql-on-fhir-v2"
 },
 "fn_extension.json": {
  "title": "extension function",
  "resources": [
   {
    "resourceType": "Patient",
    "id": "pt1",
    "meta": {
     "profile": [
      "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"
     ]
    },
    "extension": [
     {
      "id": "birthsex",
      "url": "http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex",
      "valueCode": "F"
     },
     {
      "id": "race",
      "url": "http://hl7.org/fhir/us/core/StructureDefinition/us-core-race",
      "extension": [
       {
        "url": "ombCategory",
        "valueCoding": {
         "system": "urn:oid:2.16.840.1.113883.6.238",
         "code": "2106-3",
         "display": "White"
        }
       },
       {
        "url": "text",
        "valueString": "Mixed"
       }
      ]
     },
     {
      "id": "sex",
      "url": "http://hl7.org/fhir/us/core/StructureDefinition/us-core-sex",
      "valueCode": "248152002"
     }
    ]
   },
   {
    "resourceType": "Patient",
    "id": "pt2",
    "meta": {
     "profile": [
      "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"
     ]
    },
    "extension": [
     {
      "id": "birthsex",
      "url": "http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex",
      "valueCode": "M"
     },
     {
      "url": "http://hl7.org/fhir/us/core/StructureDefinition/us-core-race",
      "id": "race",
      "extension": [
       {
        "url": "ombCategory",
        "valueCoding": {
         "system": "urn:oid:2.16.840.1.113883.6.238",
         "code": "2135-2",
         "display": "Hispanic or Latino"
        }
       },
       {
        "url": "text",
        "valueString": "Mixed"
       }
      ]
     },
     {
      "id": "sex",
      "url": "http://hl7.org/fhir/us/core/StructureDefinition/us-core-sex",
      "valueCode": "248152002"
     }
    ]
   },
   {
    "resourceType": "Patient",
    "id": "pt3",
    "meta": {
     "profile": [
      "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"
     ]
    },
    "extension": []
   }
  ],
  "tests": [
   {
    "title": "simple extension",
    "description": "flatten simple extension",
    "view": {
     "resource": "Patient",
     "select": [
      {
       "path": "id"
      },
      {
       "alias": "birthsex",
       "path": "extension('http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex').value.ofType(code).first()"
      }
     ]
    },
    "expect": [
     {
      "id": "pt1",
      "birthsex": "F"
     },
     {
      "id": "pt2",
      "birthsex": "M"
     },
     {
      "id": "pt3",
      "birthsex": null
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "id": "pt1",
       "birthsex": "F"
      },
      {
       "id": "pt2",
       "birthsex": "M"
      },
      {
       "id": "pt3",
       "birthsex": null
      }
     ]
    }
   },
   {
    "title": "nested extension",
    "description": "flatten simple extension",
    "view": {
     "resource": "Patient",
     "select": [
      {
       "path": "id"
      },
      {
       "alias": "race_code",
       "path": "extension('http://hl7.org/fhir/us/core/StructureDefinition/us-core-race').extension('ombCategory').value.ofType(Coding).code.first()"
      }
     ]
    },
    "expect": [
     {
      "id": "pt1",
      "race_code": "2106-3"
     },
     {
      "id": "pt2",
      "race_code": "2135-2"
     },
     {
      "id": "pt3",
      "race_code": null
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "id": "pt1",
       "race_code": "2106-3"
      },
      {
       "id": "pt2",
       "race_code": "2135-2"
      },
      {
       "id": "pt3",
       "race_code": null
      }
     ]
    }
   }
  ],
  "implementation": "https://github.com/fhir/sql-on-fhir-v2"
 },
 "fn_first.json": {
  "title": "first function",
  "resources": [
   {
    "resourceType": "Patient",
    "name": [
     {
      "use": "official",
      "family": "f1",
      "given": [
       "g1.1",
       "g1.2"
      ]
     },
     {
      "use": "usual",
      "given": [
       "g2.1"
      ]
     },
     {
      "use": "maiden",
      "family": "f3",
      "given": [
       "g3.1",
       "g3.2"
      ],
      "period": {
       "end": "2002"
      }
     }
    ]
   }
  ],
  "tests": [
   {
    "title": "table level first()",
    "view": {
     "resource": "Patient",
     "select": [
      {
       "path": "name.first().use"
      }
     ]
    },
    "expect": [
     {
      "use": "official"
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "use": "official"
      }
     ]
    }
   },
   {
    "title": "table and field level first()",
    "view": {
     "resource": "Patient",
     "select": [
      {
       "path": "name.first().given.first()",
       "alias": "given"
      }
     ]
    },
    "expect": [
     {
      "given": "g1.1"
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "given": "g1.1"
      }
     ]
    }
   }
  ],
  "implementation": "https://github.com/fhir/sql-on-fhir-v2"
 },
 "fn_join.json": {
  "title": "join function",
  "resources": [
   {
    "resourceType": "Patient",
    "id": "p1",
    "name": [
     {
      "use": "official",
      "given": [
       "p1.g1",
       "p1.g2"
      ]
     }
    ]
   }
  ],
  "tests": [
   {
    "title": "join with comma",
    "view": {
     "resource": "Patient",
     "select": [
      {
       "path": "id"
      },
      {
       "path": "name.given.join(',')",
       "alias": "given"
      }
     ]
    },
    "expect": [
     {
      "id": "p1",
      "given": "p1.g1,p1.g2"
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "id": "p1",
       "given": "p1.g1,p1.g2"
      }
     ]
    }
   },
   {
    "title": "join with empty value",
    "view": {
     "resource": "Patient",
     "select": [
      {
       "path": "id"
      },
      {
       "path": "name.given.join('')",
       "alias": "given"
      }
     ]
    },
    "expect": [
     {
      "id": "p1",
      "given": "p1.g1p1.g2"
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "id": "p1",
       "given": "p1.g1p1.g2"
      }
     ]
    }
   },
   {
    "title": "join with no value - default to no separator",
    "view": {
     "resource": "Patient",
     "select": [
      {
       "path": "id"
      },
      {
       "path": "name.given.join()",
       "alias": "given"
      }
     ]
    },
    "expect": [
     {
      "id": "p1",
      "given": "p1.g1p1.g2"
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "id": "p1",
       "given": "p1.g1p1.g2"
      }
     ]
    }
   }
  ],
  "implementation": "https://github.com/fhir/sql-on-fhir-v2"
 },
 "fn_rkeys.json": {
  "title": "resourceKey and referenceKey functions",
  "resources": [
   {
    "resourceType": "Observation",
    "id": "o1",
    "basedOn": [
     {
      "reference": "ServiceRequest/123"
     },
     {
      "reference": "https://example.org/fhir/ServiceRequest/456"
     },
     {
      "reference": "CarePlan/123"
     }
    ]
   }
  ],
  "tests": [
   {
    "title": "get resource key",
    "view": {
     "resource": "Observation",
     "select": [
      {
       "path": "getResourceKey()",
       "alias": "id"
      }
     ]
    },
    "expectCount": 1,
    "result": {
     "passed": true,
     "observedCount": 1,
     "observed": [
      {
       "id": "Observation/o1"
      }
     ]
    }
   },
   {
    "title": "get reference key",
    "view": {
     "resource": "Observation",
     "select": [
      {
       "forEach": "basedOn",
       "select": [
        {
         "alias": "rid",
         "path": "getReferenceKey()"
        }
       ]
      }
     ]
    },
    "expectCount": 3,
    "result": {
     "passed": true,
     "observedCount": 3,
     "observed": [
      {
       "rid": "ServiceRequest/123"
      },
      {
       "rid": "ServiceRequest/456"
      },
      {
       "rid": "CarePlan/123"
      }
     ]
    }
   },
   {
    "title": "get reference key with resource param",
    "view": {
     "resource": "Observation",
     "select": [
      {
       "forEach": "basedOn.where(getReferenceKey('CarePlan').exists())",
       "select": [
        {
         "alias": "rid",
         "path": "getReferenceKey()"
        }
       ]
      }
     ]
    },
    "expectCount": 1,
    "result": {
     "passed": true,
     "observedCount": 1,
     "observed": [
      {
       "rid": "CarePlan/123"
      }
     ]
    }
   }
  ],
  "implementation": "https://github.com/fhir/sql-on-fhir-v2"
 },
 "path_traversal.json": {
  "title": "simple path traversal",
  "resources": [
   {
    "resourceType": "Observation",
    "status": "preliminary",
    "valueString": "positive",
    "subject": {
     "reference": "Patient/123"
    },
    "code": {
     "coding": [
      {
       "code": "123"
      }
     ]
    },
    "component": [
     {
      "code": {
       "coding": [
        {
         "code": "456"
        }
       ]
      }
     }
    ]
   }
  ],
  "tests": [
   {
    "title": "single segment",
    "view": {
     "resource": "Observation",
     "select": [
      {
       "path": "status"
      }
     ]
    },
    "expect": [
     {
      "status": "preliminary"
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "status": "preliminary"
      }
     ]
    }
   },
   {
    "title": "single segment with alias",
    "view": {
     "resource": "Observation",
     "select": [
      {
       "path": "status",
       "alias": "ob_status"
      }
     ]
    },
    "expect": [
     {
      "ob_status": "preliminary"
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "ob_status": "preliminary"
      }
     ]
    }
   },
   {
    "title": "segment with choice type",
    "view": {
     "resource": "Observation",
     "select": [
      {
       "path": "value.ofType(string)",
       "alias": "valueString"
      }
     ]
    },
    "expect": [
     {
      "valueString": "positive"
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "valueString": "positive"
      }
     ]
    }
   },
   {
    "title": "multiple segments",
    "view": {
     "resource": "Observation",
     "select": [
      {
       "path": "subject.reference"
      }
     ]
    },
    "expect": [
     {
      "reference": "Patient/123"
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "reference": "Patient/123"
      }
     ]
    }
   },
   {
    "title": "multiple segments, one level of nesting",
    "view": {
     "resource": "Observation",
     "select": [
      {
       "path": "code.coding.code"
      }
     ]
    },
    "expect": [
     {
      "code": "123"
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "code": "123"
      }
     ]
    }
   },
   {
    "title": "multiple segments, multiple level of nesting ",
    "view": {
     "resource": "Observation",
     "select": [
      {
       "path": "component.code.coding.code"
      }
     ]
    },
    "expect": [
     {
      "code": "456"
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "code": "456"
      }
     ]
    }
   },
   {
    "title": "null values",
    "view": {
     "resource": "Observation",
     "select": [
      {
       "path": "status"
      },
      {
       "alias": "identifier_value",
       "path": "identifier.first().value"
      }
     ]
    },
    "expect": [
     {
      "status": "preliminary",
      "identifier_value": null
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "status": "preliminary",
       "identifier_value": null
      }
     ]
    }
   }
  ],
  "implementation": "https://github.com/fhir/sql-on-fhir-v2"
 },
 "where.json": {
  "title": "where function and element",
  "resources": [
   {
    "resourceType": "Patient",
    "id": "p1",
    "name": [
     {
      "use": "official",
      "family": "f1"
     }
    ]
   },
   {
    "resourceType": "Patient",
    "id": "p2",
    "name": [
     {
      "use": "nickname",
      "family": "f2"
     }
    ]
   },
   {
    "resourceType": "Patient",
    "id": "p3",
    "name": [
     {
      "use": "nickname",
      "given": [
       "g3"
      ],
      "family": "f3"
     }
    ]
   },
   {
    "resourceType": "Observation",
    "id": "o1",
    "valueInteger": 12
   },
   {
    "resourceType": "Observation",
    "id": "o2",
    "valueInteger": 10
   }
  ],
  "tests": [
   {
    "title": "simple where path with result",
    "view": {
     "resource": "Patient",
     "select": [
      {
       "path": "id"
      }
     ],
     "where": [
      {
       "path": "name.where(use = 'official').exists()"
      }
     ]
    },
    "expect": [
     {
      "id": "p1"
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "id": "p1"
      }
     ]
    }
   },
   {
    "title": "where path with no results",
    "view": {
     "resource": "Patient",
     "select": [
      {
       "path": "id"
      }
     ],
     "where": [
      {
       "path": "name.where(use = 'maiden').exists()"
      }
     ]
    },
    "expect": [],
    "result": {
     "passed": true,
     "observed": []
    }
   },
   {
    "title": "where path with greater than inequality",
    "view": {
     "resource": "Observation",
     "select": [
      {
       "path": "id"
      }
     ],
     "where": [
      {
       "path": "where(value.ofType(integer) > 11).exists()"
      }
     ]
    },
    "expect": [
     {
      "id": "o1"
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "id": "o1"
      }
     ]
    }
   },
   {
    "title": "where path with less than inequality",
    "view": {
     "resource": "Observation",
     "select": [
      {
       "path": "id"
      }
     ],
     "where": [
      {
       "path": "where(value.ofType(integer) < 11).exists()"
      }
     ]
    },
    "expect": [
     {
      "id": "o2"
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "id": "o2"
      }
     ]
    }
   },
   {
    "title": "multiple where paths",
    "view": {
     "resource": "Patient",
     "select": [
      {
       "path": "id"
      }
     ],
     "where": [
      {
       "path": "name.where(use = 'official').exists()"
      },
      {
       "path": "name.where(family = 'f1').exists()"
      }
     ]
    },
    "expect": [
     {
      "id": "p1"
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "id": "p1"
      }
     ]
    }
   },
   {
    "title": "where path with an 'and' connector",
    "view": {
     "resource": "Patient",
     "select": [
      {
       "path": "id"
      }
     ],
     "where": [
      {
       "path": "name.where(use = 'official' and family = 'f1').exists()"
      }
     ]
    },
    "expect": [
     {
      "id": "p1"
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "id": "p1"
      }
     ]
    }
   },
   {
    "title": "where path with an 'or' connector",
    "view": {
     "resource": "Patient",
     "select": [
      {
       "path": "id"
      }
     ],
     "where": [
      {
       "path": "name.where(use = 'official' or family = 'f2').exists()"
      }
     ]
    },
    "expect": [
     {
      "id": "p1"
     },
     {
      "id": "p2"
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "id": "p1"
      },
      {
       "id": "p2"
      }
     ]
    }
   },
   {
    "title": "where path that evaluates to true when empty",
    "view": {
     "resource": "Patient",
     "select": [
      {
       "path": "id"
      }
     ],
     "where": [
      {
       "path": "name.where(family = 'f2').empty()"
      }
     ]
    },
    "expect": [
     {
      "id": "p1"
     },
     {
      "id": "p3"
     }
    ],
    "result": {
     "passed": true,
     "observed": [
      {
       "id": "p1"
      },
      {
       "id": "p3"
      }
     ]
    }
   }
  ],
  "implementation": "https://github.com/fhir/sql-on-fhir-v2"
 }
}